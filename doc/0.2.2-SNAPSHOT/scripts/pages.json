[{"name":"abstract val x: Double","description":"sp.kx.math.Point.x","location":"-kotlin-extension.-math/sp.kx.math/-point/x.html","searchKeys":["x","abstract val x: Double","sp.kx.math.Point.x"]},{"name":"abstract val y: Double","description":"sp.kx.math.Point.y","location":"-kotlin-extension.-math/sp.kx.math/-point/y.html","searchKeys":["y","abstract val y: Double","sp.kx.math.Point.y"]},{"name":"class MutablePoint(var x: Double, var y: Double) : Point","description":"sp.kx.math.MutablePoint","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/index.html","searchKeys":["MutablePoint","class MutablePoint(var x: Double, var y: Double) : Point","sp.kx.math.MutablePoint"]},{"name":"constructor(x: Double, y: Double)","description":"sp.kx.math.MutablePoint.MutablePoint","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/-mutable-point.html","searchKeys":["MutablePoint","constructor(x: Double, y: Double)","sp.kx.math.MutablePoint.MutablePoint"]},{"name":"fun Double.eq(other: Double, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Double.eq(other: Double, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Double.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Double.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Point.copy(x: Double = this.x, y: Double = this.y): Point","description":"sp.kx.math.copy","location":"-kotlin-extension.-math/sp.kx.math/copy.html","searchKeys":["copy","fun Point.copy(x: Double = this.x, y: Double = this.y): Point","sp.kx.math.copy"]},{"name":"fun Point.eq(other: Point, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Point.eq(other: Point, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Point.swapped(): Point","description":"sp.kx.math.swapped","location":"-kotlin-extension.-math/sp.kx.math/swapped.html","searchKeys":["swapped","fun Point.swapped(): Point","sp.kx.math.swapped"]},{"name":"fun Point.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Point.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun pointOf(x: Double, y: Double): Point","description":"sp.kx.math.pointOf","location":"-kotlin-extension.-math/sp.kx.math/point-of.html","searchKeys":["pointOf","fun pointOf(x: Double, y: Double): Point","sp.kx.math.pointOf"]},{"name":"fun set(x: Double, y: Double)","description":"sp.kx.math.MutablePoint.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/set.html","searchKeys":["set","fun set(x: Double, y: Double)","sp.kx.math.MutablePoint.set"]},{"name":"fun swap()","description":"sp.kx.math.MutablePoint.swap","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/swap.html","searchKeys":["swap","fun swap()","sp.kx.math.MutablePoint.swap"]},{"name":"interface Point","description":"sp.kx.math.Point","location":"-kotlin-extension.-math/sp.kx.math/-point/index.html","searchKeys":["Point","interface Point","sp.kx.math.Point"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.MutablePoint.equals","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.MutablePoint.equals"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.MutablePoint.hashCode","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.MutablePoint.hashCode"]},{"name":"open override fun toString(): String","description":"sp.kx.math.MutablePoint.toString","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.MutablePoint.toString"]},{"name":"open override var x: Double","description":"sp.kx.math.MutablePoint.x","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/x.html","searchKeys":["x","open override var x: Double","sp.kx.math.MutablePoint.x"]},{"name":"open override var y: Double","description":"sp.kx.math.MutablePoint.y","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/y.html","searchKeys":["y","open override var y: Double","sp.kx.math.MutablePoint.y"]}]
