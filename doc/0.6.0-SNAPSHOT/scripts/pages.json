[{"name":"abstract fun length(duration: Duration): Double","description":"sp.kx.math.measure.Speed.length","location":"-kotlin-extension.-math/sp.kx.math.measure/-speed/length.html","searchKeys":["length","abstract fun length(duration: Duration): Double","sp.kx.math.measure.Speed.length"]},{"name":"abstract fun per(timeUnit: TimeUnit): Double","description":"sp.kx.math.measure.Speed.per","location":"-kotlin-extension.-math/sp.kx.math.measure/-speed/per.html","searchKeys":["per","abstract fun per(timeUnit: TimeUnit): Double","sp.kx.math.measure.Speed.per"]},{"name":"abstract fun transform(units: T): U","description":"sp.kx.math.measure.Measure.transform","location":"-kotlin-extension.-math/sp.kx.math.measure/-measure/transform.html","searchKeys":["transform","abstract fun transform(units: T): U","sp.kx.math.measure.Measure.transform"]},{"name":"abstract fun units(value: U): T","description":"sp.kx.math.measure.Measure.units","location":"-kotlin-extension.-math/sp.kx.math.measure/-measure/units.html","searchKeys":["units","abstract fun units(value: U): T","sp.kx.math.measure.Measure.units"]},{"name":"abstract fun value(): U","description":"sp.kx.math.measure.Measure.value","location":"-kotlin-extension.-math/sp.kx.math.measure/-measure/value.html","searchKeys":["value","abstract fun value(): U","sp.kx.math.measure.Measure.value"]},{"name":"abstract val a: T","description":"sp.kx.math.measure.Interval.a","location":"-kotlin-extension.-math/sp.kx.math.measure/-interval/a.html","searchKeys":["a","abstract val a: T","sp.kx.math.measure.Interval.a"]},{"name":"abstract val actual: T","description":"sp.kx.math.measure.Deviation.actual","location":"-kotlin-extension.-math/sp.kx.math.measure/-deviation/actual.html","searchKeys":["actual","abstract val actual: T","sp.kx.math.measure.Deviation.actual"]},{"name":"abstract val b: T","description":"sp.kx.math.measure.Interval.b","location":"-kotlin-extension.-math/sp.kx.math.measure/-interval/b.html","searchKeys":["b","abstract val b: T","sp.kx.math.measure.Interval.b"]},{"name":"abstract val dX: Double","description":"sp.kx.math.Offset.dX","location":"-kotlin-extension.-math/sp.kx.math/-offset/d-x.html","searchKeys":["dX","abstract val dX: Double","sp.kx.math.Offset.dX"]},{"name":"abstract val dY: Double","description":"sp.kx.math.Offset.dY","location":"-kotlin-extension.-math/sp.kx.math/-offset/d-y.html","searchKeys":["dY","abstract val dY: Double","sp.kx.math.Offset.dY"]},{"name":"abstract val expected: T","description":"sp.kx.math.measure.Deviation.expected","location":"-kotlin-extension.-math/sp.kx.math.measure/-deviation/expected.html","searchKeys":["expected","abstract val expected: T","sp.kx.math.measure.Deviation.expected"]},{"name":"abstract val finish: Point","description":"sp.kx.math.Vector.finish","location":"-kotlin-extension.-math/sp.kx.math/-vector/finish.html","searchKeys":["finish","abstract val finish: Point","sp.kx.math.Vector.finish"]},{"name":"abstract val height: Double","description":"sp.kx.math.Size.height","location":"-kotlin-extension.-math/sp.kx.math/-size/height.html","searchKeys":["height","abstract val height: Double","sp.kx.math.Size.height"]},{"name":"abstract val magnitude: U","description":"sp.kx.math.measure.Measure.magnitude","location":"-kotlin-extension.-math/sp.kx.math.measure/-measure/magnitude.html","searchKeys":["magnitude","abstract val magnitude: U","sp.kx.math.measure.Measure.magnitude"]},{"name":"abstract val start: Point","description":"sp.kx.math.Vector.start","location":"-kotlin-extension.-math/sp.kx.math/-vector/start.html","searchKeys":["start","abstract val start: Point","sp.kx.math.Vector.start"]},{"name":"abstract val width: Double","description":"sp.kx.math.Size.width","location":"-kotlin-extension.-math/sp.kx.math/-size/width.html","searchKeys":["width","abstract val width: Double","sp.kx.math.Size.width"]},{"name":"abstract val x: Double","description":"sp.kx.math.Point.x","location":"-kotlin-extension.-math/sp.kx.math/-point/x.html","searchKeys":["x","abstract val x: Double","sp.kx.math.Point.x"]},{"name":"abstract val y: Double","description":"sp.kx.math.Point.y","location":"-kotlin-extension.-math/sp.kx.math/-point/y.html","searchKeys":["y","abstract val y: Double","sp.kx.math.Point.y"]},{"name":"class MutableDeviation<T : Comparable<T>>(var actual: T, var expected: T) : Deviation<T> ","description":"sp.kx.math.measure.MutableDeviation","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-deviation/index.html","searchKeys":["MutableDeviation","class MutableDeviation<T : Comparable<T>>(var actual: T, var expected: T) : Deviation<T> ","sp.kx.math.measure.MutableDeviation"]},{"name":"class MutableDoubleMeasure(var magnitude: Double) : Measure<Double, Double> ","description":"sp.kx.math.measure.MutableDoubleMeasure","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/index.html","searchKeys":["MutableDoubleMeasure","class MutableDoubleMeasure(var magnitude: Double) : Measure<Double, Double> ","sp.kx.math.measure.MutableDoubleMeasure"]},{"name":"class MutableDurationInterval(var a: Duration, var b: Duration) : Interval<Duration> ","description":"sp.kx.math.measure.MutableDurationInterval","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/index.html","searchKeys":["MutableDurationInterval","class MutableDurationInterval(var a: Duration, var b: Duration) : Interval<Duration> ","sp.kx.math.measure.MutableDurationInterval"]},{"name":"class MutableOffset(var dX: Double, var dY: Double) : Offset","description":"sp.kx.math.MutableOffset","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/index.html","searchKeys":["MutableOffset","class MutableOffset(var dX: Double, var dY: Double) : Offset","sp.kx.math.MutableOffset"]},{"name":"class MutablePoint(var x: Double, var y: Double) : Point","description":"sp.kx.math.MutablePoint","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/index.html","searchKeys":["MutablePoint","class MutablePoint(var x: Double, var y: Double) : Point","sp.kx.math.MutablePoint"]},{"name":"class MutableSize(var width: Double, var height: Double) : Size","description":"sp.kx.math.MutableSize","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/index.html","searchKeys":["MutableSize","class MutableSize(var width: Double, var height: Double) : Size","sp.kx.math.MutableSize"]},{"name":"class MutableSpeed : Speed","description":"sp.kx.math.measure.MutableSpeed","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/index.html","searchKeys":["MutableSpeed","class MutableSpeed : Speed","sp.kx.math.measure.MutableSpeed"]},{"name":"class MutableVector(val start: MutablePoint, val finish: MutablePoint) : Vector","description":"sp.kx.math.MutableVector","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/index.html","searchKeys":["MutableVector","class MutableVector(val start: MutablePoint, val finish: MutablePoint) : Vector","sp.kx.math.MutableVector"]},{"name":"constructor(a: Duration, b: Duration)","description":"sp.kx.math.measure.MutableDurationInterval.MutableDurationInterval","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/-mutable-duration-interval.html","searchKeys":["MutableDurationInterval","constructor(a: Duration, b: Duration)","sp.kx.math.measure.MutableDurationInterval.MutableDurationInterval"]},{"name":"constructor(actual: T, expected: T)","description":"sp.kx.math.measure.MutableDeviation.MutableDeviation","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-deviation/-mutable-deviation.html","searchKeys":["MutableDeviation","constructor(actual: T, expected: T)","sp.kx.math.measure.MutableDeviation.MutableDeviation"]},{"name":"constructor(dX: Double, dY: Double)","description":"sp.kx.math.MutableOffset.MutableOffset","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/-mutable-offset.html","searchKeys":["MutableOffset","constructor(dX: Double, dY: Double)","sp.kx.math.MutableOffset.MutableOffset"]},{"name":"constructor(magnitude: Double)","description":"sp.kx.math.measure.MutableDoubleMeasure.MutableDoubleMeasure","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/-mutable-double-measure.html","searchKeys":["MutableDoubleMeasure","constructor(magnitude: Double)","sp.kx.math.measure.MutableDoubleMeasure.MutableDoubleMeasure"]},{"name":"constructor(magnitude: Double, time: Duration)","description":"sp.kx.math.measure.MutableSpeed.MutableSpeed","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/-mutable-speed.html","searchKeys":["MutableSpeed","constructor(magnitude: Double, time: Duration)","sp.kx.math.measure.MutableSpeed.MutableSpeed"]},{"name":"constructor(magnitude: Double, timeUnit: TimeUnit)","description":"sp.kx.math.measure.MutableSpeed.MutableSpeed","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/-mutable-speed.html","searchKeys":["MutableSpeed","constructor(magnitude: Double, timeUnit: TimeUnit)","sp.kx.math.measure.MutableSpeed.MutableSpeed"]},{"name":"constructor(start: MutablePoint, finish: MutablePoint)","description":"sp.kx.math.MutableVector.MutableVector","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/-mutable-vector.html","searchKeys":["MutableVector","constructor(start: MutablePoint, finish: MutablePoint)","sp.kx.math.MutableVector.MutableVector"]},{"name":"constructor(width: Double, height: Double)","description":"sp.kx.math.MutableSize.MutableSize","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/-mutable-size.html","searchKeys":["MutableSize","constructor(width: Double, height: Double)","sp.kx.math.MutableSize.MutableSize"]},{"name":"constructor(x: Double, y: Double)","description":"sp.kx.math.MutablePoint.MutablePoint","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/-mutable-point.html","searchKeys":["MutablePoint","constructor(x: Double, y: Double)","sp.kx.math.MutablePoint.MutablePoint"]},{"name":"fun <T : Comparable<T>> Interval<T>.isEmpty(): Boolean","description":"sp.kx.math.measure.isEmpty","location":"-kotlin-extension.-math/sp.kx.math.measure/is-empty.html","searchKeys":["isEmpty","fun <T : Comparable<T>> Interval<T>.isEmpty(): Boolean","sp.kx.math.measure.isEmpty"]},{"name":"fun Deviation<Double>.diff(): Double","description":"sp.kx.math.measure.diff","location":"-kotlin-extension.-math/sp.kx.math.measure/diff.html","searchKeys":["diff","fun Deviation<Double>.diff(): Double","sp.kx.math.measure.diff"]},{"name":"fun Double.ct(k: Double): Double","description":"sp.kx.math.ct","location":"-kotlin-extension.-math/sp.kx.math/ct.html","searchKeys":["ct","fun Double.ct(k: Double): Double","sp.kx.math.ct"]},{"name":"fun Double.eq(other: Double, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Double.eq(other: Double, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Double.orDefault(other: Double = 0.0): Double","description":"sp.kx.math.orDefault","location":"-kotlin-extension.-math/sp.kx.math/or-default.html","searchKeys":["orDefault","fun Double.orDefault(other: Double = 0.0): Double","sp.kx.math.orDefault"]},{"name":"fun Double.orNull(): Double?","description":"sp.kx.math.orNull","location":"-kotlin-extension.-math/sp.kx.math/or-null.html","searchKeys":["orNull","fun Double.orNull(): Double?","sp.kx.math.orNull"]},{"name":"fun Double.radians(): Double","description":"sp.kx.math.radians","location":"-kotlin-extension.-math/sp.kx.math/radians.html","searchKeys":["radians","fun Double.radians(): Double","sp.kx.math.radians"]},{"name":"fun Double.sign(): Double","description":"sp.kx.math.sign","location":"-kotlin-extension.-math/sp.kx.math/sign.html","searchKeys":["sign","fun Double.sign(): Double","sp.kx.math.sign"]},{"name":"fun Double.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Double.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Double.toString(total: Int, points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Double.toString(total: Int, points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Interval<Duration>.diff(): Duration","description":"sp.kx.math.measure.diff","location":"-kotlin-extension.-math/sp.kx.math.measure/diff.html","searchKeys":["diff","fun Interval<Duration>.diff(): Duration","sp.kx.math.measure.diff"]},{"name":"fun Interval<Duration>.frequency(value: Duration = 1.seconds): Double","description":"sp.kx.math.measure.frequency","location":"-kotlin-extension.-math/sp.kx.math.measure/frequency.html","searchKeys":["frequency","fun Interval<Duration>.frequency(value: Duration = 1.seconds): Double","sp.kx.math.measure.frequency"]},{"name":"fun Interval<Duration>.toString(durationUnit: DurationUnit = DurationUnit.SECONDS, points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.measure.toString","location":"-kotlin-extension.-math/sp.kx.math.measure/to-string.html","searchKeys":["toString","fun Interval<Duration>.toString(durationUnit: DurationUnit = DurationUnit.SECONDS, points: Int, locale: Locale = Locale.US): String","sp.kx.math.measure.toString"]},{"name":"fun Offset.copy(dX: Double = this.dX, dY: Double = this.dY): Offset","description":"sp.kx.math.copy","location":"-kotlin-extension.-math/sp.kx.math/copy.html","searchKeys":["copy","fun Offset.copy(dX: Double = this.dX, dY: Double = this.dY): Offset","sp.kx.math.copy"]},{"name":"fun Offset.eq(other: Offset, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Offset.eq(other: Offset, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Offset.isEmpty(): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Offset.isEmpty(): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Offset.isEmpty(points: Int): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Offset.isEmpty(points: Int): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Offset.swapped(): Offset","description":"sp.kx.math.swapped","location":"-kotlin-extension.-math/sp.kx.math/swapped.html","searchKeys":["swapped","fun Offset.swapped(): Offset","sp.kx.math.swapped"]},{"name":"fun Offset.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Offset.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Point.copy(x: Double = this.x, y: Double = this.y): Point","description":"sp.kx.math.copy","location":"-kotlin-extension.-math/sp.kx.math/copy.html","searchKeys":["copy","fun Point.copy(x: Double = this.x, y: Double = this.y): Point","sp.kx.math.copy"]},{"name":"fun Point.eq(other: Point, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Point.eq(other: Point, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Point.map(transform: (Double) -> Double): Point","description":"sp.kx.math.map","location":"-kotlin-extension.-math/sp.kx.math/map.html","searchKeys":["map","fun Point.map(transform: (Double) -> Double): Point","sp.kx.math.map"]},{"name":"fun Point.minus(x: Double, y: Double): Offset","description":"sp.kx.math.minus","location":"-kotlin-extension.-math/sp.kx.math/minus.html","searchKeys":["minus","fun Point.minus(x: Double, y: Double): Offset","sp.kx.math.minus"]},{"name":"fun Point.moved(length: Double): Point","description":"sp.kx.math.moved","location":"-kotlin-extension.-math/sp.kx.math/moved.html","searchKeys":["moved","fun Point.moved(length: Double): Point","sp.kx.math.moved"]},{"name":"fun Point.moved(length: Double, angle: Double): Point","description":"sp.kx.math.moved","location":"-kotlin-extension.-math/sp.kx.math/moved.html","searchKeys":["moved","fun Point.moved(length: Double, angle: Double): Point","sp.kx.math.moved"]},{"name":"fun Point.plus(dX: Double, dY: Double): Point","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","fun Point.plus(dX: Double, dY: Double): Point","sp.kx.math.plus"]},{"name":"fun Point.swapped(): Point","description":"sp.kx.math.swapped","location":"-kotlin-extension.-math/sp.kx.math/swapped.html","searchKeys":["swapped","fun Point.swapped(): Point","sp.kx.math.swapped"]},{"name":"fun Point.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Point.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Point.toVector(): Vector","description":"sp.kx.math.toVector","location":"-kotlin-extension.-math/sp.kx.math/to-vector.html","searchKeys":["toVector","fun Point.toVector(): Vector","sp.kx.math.toVector"]},{"name":"fun Point.toVector(finish: Point, offset: Offset): Vector","description":"sp.kx.math.toVector","location":"-kotlin-extension.-math/sp.kx.math/to-vector.html","searchKeys":["toVector","fun Point.toVector(finish: Point, offset: Offset): Vector","sp.kx.math.toVector"]},{"name":"fun Point.toVector(offset: Offset): Vector","description":"sp.kx.math.toVector","location":"-kotlin-extension.-math/sp.kx.math/to-vector.html","searchKeys":["toVector","fun Point.toVector(offset: Offset): Vector","sp.kx.math.toVector"]},{"name":"fun Point.toVector(x: Double, y: Double): Vector","description":"sp.kx.math.toVector","location":"-kotlin-extension.-math/sp.kx.math/to-vector.html","searchKeys":["toVector","fun Point.toVector(x: Double, y: Double): Vector","sp.kx.math.toVector"]},{"name":"fun Point.toVector(x: Double, y: Double, transform: (Double) -> Double): Vector","description":"sp.kx.math.toVector","location":"-kotlin-extension.-math/sp.kx.math/to-vector.html","searchKeys":["toVector","fun Point.toVector(x: Double, y: Double, transform: (Double) -> Double): Vector","sp.kx.math.toVector"]},{"name":"fun Size.center(): Offset","description":"sp.kx.math.center","location":"-kotlin-extension.-math/sp.kx.math/center.html","searchKeys":["center","fun Size.center(): Offset","sp.kx.math.center"]},{"name":"fun Size.centerPoint(): Point","description":"sp.kx.math.centerPoint","location":"-kotlin-extension.-math/sp.kx.math/center-point.html","searchKeys":["centerPoint","fun Size.centerPoint(): Point","sp.kx.math.centerPoint"]},{"name":"fun Size.eq(other: Size, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Size.eq(other: Size, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Size.isEmpty(): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Size.isEmpty(): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Size.isEmpty(points: Int): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Size.isEmpty(points: Int): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Size.toOffset(): Offset","description":"sp.kx.math.toOffset","location":"-kotlin-extension.-math/sp.kx.math/to-offset.html","searchKeys":["toOffset","fun Size.toOffset(): Offset","sp.kx.math.toOffset"]},{"name":"fun Size.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Size.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun Speed.isEmpty(): Boolean","description":"sp.kx.math.measure.isEmpty","location":"-kotlin-extension.-math/sp.kx.math.measure/is-empty.html","searchKeys":["isEmpty","fun Speed.isEmpty(): Boolean","sp.kx.math.measure.isEmpty"]},{"name":"fun Speed.isEmpty(points: Int, timeUnit: TimeUnit = TimeUnit.NANOSECONDS): Boolean","description":"sp.kx.math.measure.isEmpty","location":"-kotlin-extension.-math/sp.kx.math.measure/is-empty.html","searchKeys":["isEmpty","fun Speed.isEmpty(points: Int, timeUnit: TimeUnit = TimeUnit.NANOSECONDS): Boolean","sp.kx.math.measure.isEmpty"]},{"name":"fun Vector.angle(): Double","description":"sp.kx.math.angle","location":"-kotlin-extension.-math/sp.kx.math/angle.html","searchKeys":["angle","fun Vector.angle(): Double","sp.kx.math.angle"]},{"name":"fun Vector.center(): Point","description":"sp.kx.math.center","location":"-kotlin-extension.-math/sp.kx.math/center.html","searchKeys":["center","fun Vector.center(): Point","sp.kx.math.center"]},{"name":"fun Vector.copy(start: Point = this.start, finish: Point = this.finish): Vector","description":"sp.kx.math.copy","location":"-kotlin-extension.-math/sp.kx.math/copy.html","searchKeys":["copy","fun Vector.copy(start: Point = this.start, finish: Point = this.finish): Vector","sp.kx.math.copy"]},{"name":"fun Vector.eq(other: Vector, points: Int): Boolean","description":"sp.kx.math.eq","location":"-kotlin-extension.-math/sp.kx.math/eq.html","searchKeys":["eq","fun Vector.eq(other: Vector, points: Int): Boolean","sp.kx.math.eq"]},{"name":"fun Vector.isEmpty(): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Vector.isEmpty(): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Vector.isEmpty(points: Int): Boolean","description":"sp.kx.math.isEmpty","location":"-kotlin-extension.-math/sp.kx.math/is-empty.html","searchKeys":["isEmpty","fun Vector.isEmpty(points: Int): Boolean","sp.kx.math.isEmpty"]},{"name":"fun Vector.length(): Double","description":"sp.kx.math.length","location":"-kotlin-extension.-math/sp.kx.math/length.html","searchKeys":["length","fun Vector.length(): Double","sp.kx.math.length"]},{"name":"fun Vector.map(transform: (Double) -> Double): Vector","description":"sp.kx.math.map","location":"-kotlin-extension.-math/sp.kx.math/map.html","searchKeys":["map","fun Vector.map(transform: (Double) -> Double): Vector","sp.kx.math.map"]},{"name":"fun Vector.swapped(): Vector","description":"sp.kx.math.swapped","location":"-kotlin-extension.-math/sp.kx.math/swapped.html","searchKeys":["swapped","fun Vector.swapped(): Vector","sp.kx.math.swapped"]},{"name":"fun Vector.toString(points: Int, locale: Locale = Locale.US): String","description":"sp.kx.math.toString","location":"-kotlin-extension.-math/sp.kx.math/to-string.html","searchKeys":["toString","fun Vector.toString(points: Int, locale: Locale = Locale.US): String","sp.kx.math.toString"]},{"name":"fun add(dX: Double, dY: Double)","description":"sp.kx.math.MutablePoint.add","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/add.html","searchKeys":["add","fun add(dX: Double, dY: Double)","sp.kx.math.MutablePoint.add"]},{"name":"fun add(offset: Offset)","description":"sp.kx.math.MutablePoint.add","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/add.html","searchKeys":["add","fun add(offset: Offset)","sp.kx.math.MutablePoint.add"]},{"name":"fun angleOf(a: Point, b: Point): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(a: Point, b: Point): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(a: Point, b: Point, offset: Offset): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(a: Point, b: Point, offset: Offset): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(a: Point, bX: Double, bY: Double): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(a: Point, bX: Double, bY: Double): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(a: Point, offset: Offset): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(a: Point, offset: Offset): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(aX: Double, aY: Double, b: Point): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(aX: Double, aY: Double, b: Point): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(aX: Double, aY: Double, bX: Double, bY: Double): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(aX: Double, aY: Double, bX: Double, bY: Double): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(offset: Offset): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(offset: Offset): Double","sp.kx.math.angleOf"]},{"name":"fun angleOf(x: Double, y: Double): Double","description":"sp.kx.math.angleOf","location":"-kotlin-extension.-math/sp.kx.math/angle-of.html","searchKeys":["angleOf","fun angleOf(x: Double, y: Double): Double","sp.kx.math.angleOf"]},{"name":"fun centerOf(a: Point, b: Point): Point","description":"sp.kx.math.centerOf","location":"-kotlin-extension.-math/sp.kx.math/center-of.html","searchKeys":["centerOf","fun centerOf(a: Point, b: Point): Point","sp.kx.math.centerOf"]},{"name":"fun centerOf(aX: Double, aY: Double, bX: Double, bY: Double): Point","description":"sp.kx.math.centerOf","location":"-kotlin-extension.-math/sp.kx.math/center-of.html","searchKeys":["centerOf","fun centerOf(aX: Double, aY: Double, bX: Double, bY: Double): Point","sp.kx.math.centerOf"]},{"name":"fun centerOf(offset: Offset): Point","description":"sp.kx.math.centerOf","location":"-kotlin-extension.-math/sp.kx.math/center-of.html","searchKeys":["centerOf","fun centerOf(offset: Offset): Point","sp.kx.math.centerOf"]},{"name":"fun centerOf(x: Double, y: Double): Point","description":"sp.kx.math.centerOf","location":"-kotlin-extension.-math/sp.kx.math/center-of.html","searchKeys":["centerOf","fun centerOf(x: Double, y: Double): Point","sp.kx.math.centerOf"]},{"name":"fun commit()","description":"sp.kx.math.measure.MutableDeviation.commit","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-deviation/commit.html","searchKeys":["commit","fun commit()","sp.kx.math.measure.MutableDeviation.commit"]},{"name":"fun distanceOf(a: Point, b: Point): Double","description":"sp.kx.math.distanceOf","location":"-kotlin-extension.-math/sp.kx.math/distance-of.html","searchKeys":["distanceOf","fun distanceOf(a: Point, b: Point): Double","sp.kx.math.distanceOf"]},{"name":"fun distanceOf(aX: Double, aY: Double, bX: Double, bY: Double): Double","description":"sp.kx.math.distanceOf","location":"-kotlin-extension.-math/sp.kx.math/distance-of.html","searchKeys":["distanceOf","fun distanceOf(aX: Double, aY: Double, bX: Double, bY: Double): Double","sp.kx.math.distanceOf"]},{"name":"fun distanceOf(offset: Offset): Double","description":"sp.kx.math.distanceOf","location":"-kotlin-extension.-math/sp.kx.math/distance-of.html","searchKeys":["distanceOf","fun distanceOf(offset: Offset): Double","sp.kx.math.distanceOf"]},{"name":"fun distanceOf(x: Double, y: Double): Double","description":"sp.kx.math.distanceOf","location":"-kotlin-extension.-math/sp.kx.math/distance-of.html","searchKeys":["distanceOf","fun distanceOf(x: Double, y: Double): Double","sp.kx.math.distanceOf"]},{"name":"fun intervalOf(a: Duration, b: Duration): Interval<Duration>","description":"sp.kx.math.measure.intervalOf","location":"-kotlin-extension.-math/sp.kx.math.measure/interval-of.html","searchKeys":["intervalOf","fun intervalOf(a: Duration, b: Duration): Interval<Duration>","sp.kx.math.measure.intervalOf"]},{"name":"fun measureOf(magnitude: Double): Measure<Double, Double>","description":"sp.kx.math.measure.measureOf","location":"-kotlin-extension.-math/sp.kx.math.measure/measure-of.html","searchKeys":["measureOf","fun measureOf(magnitude: Double): Measure<Double, Double>","sp.kx.math.measure.measureOf"]},{"name":"fun move(length: Double)","description":"sp.kx.math.MutablePoint.move","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/move.html","searchKeys":["move","fun move(length: Double)","sp.kx.math.MutablePoint.move"]},{"name":"fun move(length: Double, angle: Double)","description":"sp.kx.math.MutablePoint.move","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/move.html","searchKeys":["move","fun move(length: Double, angle: Double)","sp.kx.math.MutablePoint.move"]},{"name":"fun offsetOf(dX: Double, dY: Double): Offset","description":"sp.kx.math.offsetOf","location":"-kotlin-extension.-math/sp.kx.math/offset-of.html","searchKeys":["offsetOf","fun offsetOf(dX: Double, dY: Double): Offset","sp.kx.math.offsetOf"]},{"name":"fun pointOf(x: Double, y: Double): Point","description":"sp.kx.math.pointOf","location":"-kotlin-extension.-math/sp.kx.math/point-of.html","searchKeys":["pointOf","fun pointOf(x: Double, y: Double): Point","sp.kx.math.pointOf"]},{"name":"fun pointOf(x: Double, y: Double, transform: (Double) -> Double): Point","description":"sp.kx.math.pointOf","location":"-kotlin-extension.-math/sp.kx.math/point-of.html","searchKeys":["pointOf","fun pointOf(x: Double, y: Double, transform: (Double) -> Double): Point","sp.kx.math.pointOf"]},{"name":"fun pointOf(x: Int, y: Int): Point","description":"sp.kx.math.pointOf","location":"-kotlin-extension.-math/sp.kx.math/point-of.html","searchKeys":["pointOf","fun pointOf(x: Int, y: Int): Point","sp.kx.math.pointOf"]},{"name":"fun set(dX: Double, dY: Double)","description":"sp.kx.math.MutableOffset.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/set.html","searchKeys":["set","fun set(dX: Double, dY: Double)","sp.kx.math.MutableOffset.set"]},{"name":"fun set(magnitude: Double, time: Duration)","description":"sp.kx.math.measure.MutableSpeed.set","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/set.html","searchKeys":["set","fun set(magnitude: Double, time: Duration)","sp.kx.math.measure.MutableSpeed.set"]},{"name":"fun set(magnitude: Double, timeUnit: TimeUnit)","description":"sp.kx.math.measure.MutableSpeed.set","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/set.html","searchKeys":["set","fun set(magnitude: Double, timeUnit: TimeUnit)","sp.kx.math.measure.MutableSpeed.set"]},{"name":"fun set(other: Offset)","description":"sp.kx.math.MutableOffset.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/set.html","searchKeys":["set","fun set(other: Offset)","sp.kx.math.MutableOffset.set"]},{"name":"fun set(other: Point)","description":"sp.kx.math.MutablePoint.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/set.html","searchKeys":["set","fun set(other: Point)","sp.kx.math.MutablePoint.set"]},{"name":"fun set(other: Size)","description":"sp.kx.math.MutableSize.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/set.html","searchKeys":["set","fun set(other: Size)","sp.kx.math.MutableSize.set"]},{"name":"fun set(other: Vector)","description":"sp.kx.math.MutableVector.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/set.html","searchKeys":["set","fun set(other: Vector)","sp.kx.math.MutableVector.set"]},{"name":"fun set(start: Point, finish: Point)","description":"sp.kx.math.MutableVector.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/set.html","searchKeys":["set","fun set(start: Point, finish: Point)","sp.kx.math.MutableVector.set"]},{"name":"fun set(width: Double, height: Double)","description":"sp.kx.math.MutableSize.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/set.html","searchKeys":["set","fun set(width: Double, height: Double)","sp.kx.math.MutableSize.set"]},{"name":"fun set(x: Double, y: Double)","description":"sp.kx.math.MutablePoint.set","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/set.html","searchKeys":["set","fun set(x: Double, y: Double)","sp.kx.math.MutablePoint.set"]},{"name":"fun sizeOf(width: Double, height: Double): Size","description":"sp.kx.math.sizeOf","location":"-kotlin-extension.-math/sp.kx.math/size-of.html","searchKeys":["sizeOf","fun sizeOf(width: Double, height: Double): Size","sp.kx.math.sizeOf"]},{"name":"fun sizeOf(width: Int, height: Int): Size","description":"sp.kx.math.sizeOf","location":"-kotlin-extension.-math/sp.kx.math/size-of.html","searchKeys":["sizeOf","fun sizeOf(width: Int, height: Int): Size","sp.kx.math.sizeOf"]},{"name":"fun speedOf(magnitude: Double, time: Duration): Speed","description":"sp.kx.math.measure.speedOf","location":"-kotlin-extension.-math/sp.kx.math.measure/speed-of.html","searchKeys":["speedOf","fun speedOf(magnitude: Double, time: Duration): Speed","sp.kx.math.measure.speedOf"]},{"name":"fun speedOf(magnitude: Double, timeUnit: TimeUnit = TimeUnit.SECONDS): Speed","description":"sp.kx.math.measure.speedOf","location":"-kotlin-extension.-math/sp.kx.math.measure/speed-of.html","searchKeys":["speedOf","fun speedOf(magnitude: Double, timeUnit: TimeUnit = TimeUnit.SECONDS): Speed","sp.kx.math.measure.speedOf"]},{"name":"fun swap()","description":"sp.kx.math.MutableOffset.swap","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/swap.html","searchKeys":["swap","fun swap()","sp.kx.math.MutableOffset.swap"]},{"name":"fun swap()","description":"sp.kx.math.MutablePoint.swap","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/swap.html","searchKeys":["swap","fun swap()","sp.kx.math.MutablePoint.swap"]},{"name":"fun swap()","description":"sp.kx.math.MutableVector.swap","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/swap.html","searchKeys":["swap","fun swap()","sp.kx.math.MutableVector.swap"]},{"name":"fun vectorOf(start: Point, length: Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(start: Point, length: Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(start: Point, length: Double, angle: Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(start: Point, length: Double, angle: Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finish: Point): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finish: Point): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finish: Point, dX: Double, dY: Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finish: Point, dX: Double, dY: Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finish: Point, offset: Offset): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finish: Point, offset: Offset): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finish: Point, transform: (Double) -> Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finish: Point, transform: (Double) -> Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, dX: Double, dY: Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, dX: Double, dY: Double): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, offset: Offset): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, offset: Offset): Vector","sp.kx.math.vectorOf"]},{"name":"fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, transform: (Double) -> Double): Vector","description":"sp.kx.math.vectorOf","location":"-kotlin-extension.-math/sp.kx.math/vector-of.html","searchKeys":["vectorOf","fun vectorOf(startX: Double, startY: Double, finishX: Double, finishY: Double, transform: (Double) -> Double): Vector","sp.kx.math.vectorOf"]},{"name":"interface Deviation<T : Comparable<T>>","description":"sp.kx.math.measure.Deviation","location":"-kotlin-extension.-math/sp.kx.math.measure/-deviation/index.html","searchKeys":["Deviation","interface Deviation<T : Comparable<T>>","sp.kx.math.measure.Deviation"]},{"name":"interface Interval<T : Comparable<T>>","description":"sp.kx.math.measure.Interval","location":"-kotlin-extension.-math/sp.kx.math.measure/-interval/index.html","searchKeys":["Interval","interface Interval<T : Comparable<T>>","sp.kx.math.measure.Interval"]},{"name":"interface Measure<T : Comparable<T>, U : Comparable<U>>","description":"sp.kx.math.measure.Measure","location":"-kotlin-extension.-math/sp.kx.math.measure/-measure/index.html","searchKeys":["Measure","interface Measure<T : Comparable<T>, U : Comparable<U>>","sp.kx.math.measure.Measure"]},{"name":"interface Offset","description":"sp.kx.math.Offset","location":"-kotlin-extension.-math/sp.kx.math/-offset/index.html","searchKeys":["Offset","interface Offset","sp.kx.math.Offset"]},{"name":"interface Point","description":"sp.kx.math.Point","location":"-kotlin-extension.-math/sp.kx.math/-point/index.html","searchKeys":["Point","interface Point","sp.kx.math.Point"]},{"name":"interface Size","description":"sp.kx.math.Size","location":"-kotlin-extension.-math/sp.kx.math/-size/index.html","searchKeys":["Size","interface Size","sp.kx.math.Size"]},{"name":"interface Speed","description":"sp.kx.math.measure.Speed","location":"-kotlin-extension.-math/sp.kx.math.measure/-speed/index.html","searchKeys":["Speed","interface Speed","sp.kx.math.measure.Speed"]},{"name":"interface Vector","description":"sp.kx.math.Vector","location":"-kotlin-extension.-math/sp.kx.math/-vector/index.html","searchKeys":["Vector","interface Vector","sp.kx.math.Vector"]},{"name":"object Companion","description":"sp.kx.math.Offset.Companion","location":"-kotlin-extension.-math/sp.kx.math/-offset/-companion/index.html","searchKeys":["Companion","object Companion","sp.kx.math.Offset.Companion"]},{"name":"object Companion","description":"sp.kx.math.Point.Companion","location":"-kotlin-extension.-math/sp.kx.math/-point/-companion/index.html","searchKeys":["Companion","object Companion","sp.kx.math.Point.Companion"]},{"name":"object Companion","description":"sp.kx.math.measure.Speed.Companion","location":"-kotlin-extension.-math/sp.kx.math.measure/-speed/-companion/index.html","searchKeys":["Companion","object Companion","sp.kx.math.measure.Speed.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.MutableOffset.equals","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.MutableOffset.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.MutablePoint.equals","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.MutablePoint.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.MutableSize.equals","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.MutableSize.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.MutableVector.equals","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.MutableVector.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.measure.MutableDoubleMeasure.equals","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.measure.MutableDoubleMeasure.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.measure.MutableDurationInterval.equals","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.measure.MutableDurationInterval.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"sp.kx.math.measure.MutableSpeed.equals","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","sp.kx.math.measure.MutableSpeed.equals"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.MutableOffset.hashCode","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.MutableOffset.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.MutablePoint.hashCode","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.MutablePoint.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.MutableSize.hashCode","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.MutableSize.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.MutableVector.hashCode","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.MutableVector.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.measure.MutableDoubleMeasure.hashCode","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.measure.MutableDoubleMeasure.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.measure.MutableDurationInterval.hashCode","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.measure.MutableDurationInterval.hashCode"]},{"name":"open override fun hashCode(): Int","description":"sp.kx.math.measure.MutableSpeed.hashCode","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","sp.kx.math.measure.MutableSpeed.hashCode"]},{"name":"open override fun length(duration: Duration): Double","description":"sp.kx.math.measure.MutableSpeed.length","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/length.html","searchKeys":["length","open override fun length(duration: Duration): Double","sp.kx.math.measure.MutableSpeed.length"]},{"name":"open override fun per(timeUnit: TimeUnit): Double","description":"sp.kx.math.measure.MutableSpeed.per","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/per.html","searchKeys":["per","open override fun per(timeUnit: TimeUnit): Double","sp.kx.math.measure.MutableSpeed.per"]},{"name":"open override fun toString(): String","description":"sp.kx.math.MutableOffset.toString","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.MutableOffset.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.MutablePoint.toString","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.MutablePoint.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.MutableSize.toString","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.MutableSize.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.MutableVector.toString","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.MutableVector.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.measure.MutableDoubleMeasure.toString","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.measure.MutableDoubleMeasure.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.measure.MutableDurationInterval.toString","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.measure.MutableDurationInterval.toString"]},{"name":"open override fun toString(): String","description":"sp.kx.math.measure.MutableSpeed.toString","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-speed/to-string.html","searchKeys":["toString","open override fun toString(): String","sp.kx.math.measure.MutableSpeed.toString"]},{"name":"open override fun transform(units: Double): Double","description":"sp.kx.math.measure.MutableDoubleMeasure.transform","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/transform.html","searchKeys":["transform","open override fun transform(units: Double): Double","sp.kx.math.measure.MutableDoubleMeasure.transform"]},{"name":"open override fun units(value: Double): Double","description":"sp.kx.math.measure.MutableDoubleMeasure.units","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/units.html","searchKeys":["units","open override fun units(value: Double): Double","sp.kx.math.measure.MutableDoubleMeasure.units"]},{"name":"open override fun value(): Double","description":"sp.kx.math.measure.MutableDoubleMeasure.value","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/value.html","searchKeys":["value","open override fun value(): Double","sp.kx.math.measure.MutableDoubleMeasure.value"]},{"name":"open override val finish: MutablePoint","description":"sp.kx.math.MutableVector.finish","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/finish.html","searchKeys":["finish","open override val finish: MutablePoint","sp.kx.math.MutableVector.finish"]},{"name":"open override val start: MutablePoint","description":"sp.kx.math.MutableVector.start","location":"-kotlin-extension.-math/sp.kx.math/-mutable-vector/start.html","searchKeys":["start","open override val start: MutablePoint","sp.kx.math.MutableVector.start"]},{"name":"open override var a: Duration","description":"sp.kx.math.measure.MutableDurationInterval.a","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/a.html","searchKeys":["a","open override var a: Duration","sp.kx.math.measure.MutableDurationInterval.a"]},{"name":"open override var actual: T","description":"sp.kx.math.measure.MutableDeviation.actual","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-deviation/actual.html","searchKeys":["actual","open override var actual: T","sp.kx.math.measure.MutableDeviation.actual"]},{"name":"open override var b: Duration","description":"sp.kx.math.measure.MutableDurationInterval.b","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-duration-interval/b.html","searchKeys":["b","open override var b: Duration","sp.kx.math.measure.MutableDurationInterval.b"]},{"name":"open override var dX: Double","description":"sp.kx.math.MutableOffset.dX","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/d-x.html","searchKeys":["dX","open override var dX: Double","sp.kx.math.MutableOffset.dX"]},{"name":"open override var dY: Double","description":"sp.kx.math.MutableOffset.dY","location":"-kotlin-extension.-math/sp.kx.math/-mutable-offset/d-y.html","searchKeys":["dY","open override var dY: Double","sp.kx.math.MutableOffset.dY"]},{"name":"open override var expected: T","description":"sp.kx.math.measure.MutableDeviation.expected","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-deviation/expected.html","searchKeys":["expected","open override var expected: T","sp.kx.math.measure.MutableDeviation.expected"]},{"name":"open override var height: Double","description":"sp.kx.math.MutableSize.height","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/height.html","searchKeys":["height","open override var height: Double","sp.kx.math.MutableSize.height"]},{"name":"open override var magnitude: Double","description":"sp.kx.math.measure.MutableDoubleMeasure.magnitude","location":"-kotlin-extension.-math/sp.kx.math.measure/-mutable-double-measure/magnitude.html","searchKeys":["magnitude","open override var magnitude: Double","sp.kx.math.measure.MutableDoubleMeasure.magnitude"]},{"name":"open override var width: Double","description":"sp.kx.math.MutableSize.width","location":"-kotlin-extension.-math/sp.kx.math/-mutable-size/width.html","searchKeys":["width","open override var width: Double","sp.kx.math.MutableSize.width"]},{"name":"open override var x: Double","description":"sp.kx.math.MutablePoint.x","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/x.html","searchKeys":["x","open override var x: Double","sp.kx.math.MutablePoint.x"]},{"name":"open override var y: Double","description":"sp.kx.math.MutablePoint.y","location":"-kotlin-extension.-math/sp.kx.math/-mutable-point/y.html","searchKeys":["y","open override var y: Double","sp.kx.math.MutablePoint.y"]},{"name":"operator fun Offset.div(value: Double): Offset","description":"sp.kx.math.div","location":"-kotlin-extension.-math/sp.kx.math/div.html","searchKeys":["div","operator fun Offset.div(value: Double): Offset","sp.kx.math.div"]},{"name":"operator fun Offset.times(value: Double): Offset","description":"sp.kx.math.times","location":"-kotlin-extension.-math/sp.kx.math/times.html","searchKeys":["times","operator fun Offset.times(value: Double): Offset","sp.kx.math.times"]},{"name":"operator fun Point.minus(offset: Offset): Point","description":"sp.kx.math.minus","location":"-kotlin-extension.-math/sp.kx.math/minus.html","searchKeys":["minus","operator fun Point.minus(offset: Offset): Point","sp.kx.math.minus"]},{"name":"operator fun Point.minus(other: Point): Offset","description":"sp.kx.math.minus","location":"-kotlin-extension.-math/sp.kx.math/minus.html","searchKeys":["minus","operator fun Point.minus(other: Point): Offset","sp.kx.math.minus"]},{"name":"operator fun Point.plus(finish: Point): Vector","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","operator fun Point.plus(finish: Point): Vector","sp.kx.math.plus"]},{"name":"operator fun Point.plus(measure: Measure<Double, Double>): Point","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","operator fun Point.plus(measure: Measure<Double, Double>): Point","sp.kx.math.plus"]},{"name":"operator fun Point.plus(offset: Offset): Point","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","operator fun Point.plus(offset: Offset): Point","sp.kx.math.plus"]},{"name":"operator fun Point.times(value: Double): Point","description":"sp.kx.math.times","location":"-kotlin-extension.-math/sp.kx.math/times.html","searchKeys":["times","operator fun Point.times(value: Double): Point","sp.kx.math.times"]},{"name":"operator fun Vector.plus(measure: Measure<Double, Double>): Vector","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","operator fun Vector.plus(measure: Measure<Double, Double>): Vector","sp.kx.math.plus"]},{"name":"operator fun Vector.plus(offset: Offset): Vector","description":"sp.kx.math.plus","location":"-kotlin-extension.-math/sp.kx.math/plus.html","searchKeys":["plus","operator fun Vector.plus(offset: Offset): Vector","sp.kx.math.plus"]},{"name":"operator fun Vector.times(value: Double): Vector","description":"sp.kx.math.times","location":"-kotlin-extension.-math/sp.kx.math/times.html","searchKeys":["times","operator fun Vector.times(value: Double): Vector","sp.kx.math.times"]},{"name":"val Center: Point","description":"sp.kx.math.Point.Companion.Center","location":"-kotlin-extension.-math/sp.kx.math/-point/-companion/-center.html","searchKeys":["Center","val Center: Point","sp.kx.math.Point.Companion.Center"]},{"name":"val Empty: Offset","description":"sp.kx.math.Offset.Companion.Empty","location":"-kotlin-extension.-math/sp.kx.math/-offset/-companion/-empty.html","searchKeys":["Empty","val Empty: Offset","sp.kx.math.Offset.Companion.Empty"]},{"name":"val Zero: Speed","description":"sp.kx.math.measure.Speed.Companion.Zero","location":"-kotlin-extension.-math/sp.kx.math.measure/-speed/-companion/-zero.html","searchKeys":["Zero","val Zero: Speed","sp.kx.math.measure.Speed.Companion.Zero"]}]
